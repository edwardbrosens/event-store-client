<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientMessageDtos.proto

namespace EventStore\Client\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>EventStore.Client.Messages.ResolvedEvent</code>
 */
class ResolvedEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord event = 1;</code>
     */
    private $event = null;
    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord link = 2;</code>
     */
    private $link = null;
    /**
     * Generated from protobuf field <code>int64 commit_position = 3;</code>
     */
    private $commit_position = 0;
    /**
     * Generated from protobuf field <code>int64 prepare_position = 4;</code>
     */
    private $prepare_position = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \EventStore\Client\Messages\EventRecord $event
     *     @type \EventStore\Client\Messages\EventRecord $link
     *     @type int|string $commit_position
     *     @type int|string $prepare_position
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClientMessageDtos::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord event = 1;</code>
     * @return \EventStore\Client\Messages\EventRecord
     */
    public function getEvent()
    {
        return $this->event;
    }

    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord event = 1;</code>
     * @param \EventStore\Client\Messages\EventRecord $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkMessage($var, \EventStore\Client\Messages\EventRecord::class);
        $this->event = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord link = 2;</code>
     * @return \EventStore\Client\Messages\EventRecord
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * Generated from protobuf field <code>.EventStore.Client.Messages.EventRecord link = 2;</code>
     * @param \EventStore\Client\Messages\EventRecord $var
     * @return $this
     */
    public function setLink($var)
    {
        GPBUtil::checkMessage($var, \EventStore\Client\Messages\EventRecord::class);
        $this->link = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 commit_position = 3;</code>
     * @return int|string
     */
    public function getCommitPosition()
    {
        return $this->commit_position;
    }

    /**
     * Generated from protobuf field <code>int64 commit_position = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommitPosition($var)
    {
        GPBUtil::checkInt64($var);
        $this->commit_position = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 prepare_position = 4;</code>
     * @return int|string
     */
    public function getPreparePosition()
    {
        return $this->prepare_position;
    }

    /**
     * Generated from protobuf field <code>int64 prepare_position = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPreparePosition($var)
    {
        GPBUtil::checkInt64($var);
        $this->prepare_position = $var;

        return $this;
    }

}

